% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/key.R
\name{set_key}
\alias{set_key}
\title{Create a key or set a password for an existing key}
\usage{
set_key(key, password = NULL, overwrite = c("ask", "yes", "no"),
  ring = getOption("speak.keyring", "friend"))
}
\arguments{
\item{key}{Character. The system for which you want to set up a password.}

\item{password}{Character, to specify a password in plain text,
or NULL to type it in at runtime.}

\item{overwrite}{Character. Overwrite any existing password?
"yes" to overwrite, "no" to fail, "ask" to prompt.}

\item{ring}{Optional. Name of keyring.}
}
\value{
NULL (invisibly)
}
\description{
Save the password for a given system.
}
\details{
\strong{It is recommended to enter passwords interactively}
using \code{set_key("system_name")}.
Users can also use \code{set_key("system_name", "your_password")}
to enter passwords programmatically,
but \strong{entering passwords in plain text is not recommended}.
Users could forget and save it as a script,
and either way it will show up in their \code{.Rhistory} file.

Function includes checks for \code{\link{has_keyring}},
\code{\link{keyring_is_locked}}, and \code{\link{has_key}}.
If the key already exists, \code{\link{set_key}} will either overwrite it,
fail, or prompt you, depending on the value of \code{overwrite}.
}
\examples{
\dontrun{
set_key("snowflake")
}
}
